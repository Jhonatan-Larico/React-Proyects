{"version":3,"sources":["hooks/use-http.js","lib/api.js","components/UI/Card.module.css","components/quotes/QuoteForm.module.css","fb.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","deleteQuote","module","exports","app","firebase","initializeApp","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","fileUrl","setFileUrl","setIsUploading","authorInputRef","useRef","textInputRef","fileSelectHandler","e","storageRef","storage","ref","filePath","child","target","files","put","console","log","getDownloadURL","url","when","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","rows","onChange","actions","onClick","NewQuote","history","useHistory","useEffect"],"mappings":"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","file":"static/js/6.b7650431.chunk.js","sourcesContent":["import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-http-76b5e-default-rtdb.firebaseio.com/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n\nexport async function deleteQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  // const data = await response.json();\n  if (!response.ok) {\n    throw new Error(response.status || \"Id not Found\");\n  }\n\n  // const transformedQuotes= getAllQuotes()\n\n  return null;\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import firebase from 'firebase/compat/app'\nimport \"firebase/compat/storage\"\nimport \"firebase/compat/firestore\"\n\nexport const app = firebase.initializeApp({\n  \"projectId\": \"react-http-76b5e\",\n  \"appId\": \"1:486325258301:web:fa5d5a18e79c0368078254\",\n  \"databaseURL\": \"https://react-http-76b5e-default-rtdb.firebaseio.com\",\n  \"storageBucket\": \"react-http-76b5e.appspot.com\",\n  \"locationId\": \"us-central\",\n  \"apiKey\": \"AIzaSyA2npE1NlwkFwwUzghyRp7wn4WJ3sNwI9E\",\n  \"authDomain\": \"react-http-76b5e.firebaseapp.com\",\n  \"messagingSenderId\": \"486325258301\"\n});\n\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { app } from \"../../fb\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    console.log(fileUrl);\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText,\n      url: fileUrl,\n    });\n  }\n\n  const finishEnteringHandler = (e) => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const fileSelectHandler = async (e) => {\n    //firestone\n    setIsUploading(true);\n    const storageRef = app.storage().ref();\n    const filePath = storageRef.child(e.target.files[0].name);\n    await filePath.put(e.target.files[0]);\n    console.log(\"loaded file\", e.target.files[0].name);\n    const url = await filePath.getDownloadURL();\n    setFileUrl(url);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Estas seguro que quieres salir? Toda la información se perdera!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Producto</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Cantidad</label>\n            <input id=\"text\" rows=\"5\" type=\"number\" ref={textInputRef}></input>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"img\" >Imagen</label>\n            <input\n              id=\"img\"\n              rows=\"5\"\n              type=\"file\"\n              onChange={fileSelectHandler}\n            ></input>\n          </div>\n\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Agregar\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/productos');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n"],"sourceRoot":""}